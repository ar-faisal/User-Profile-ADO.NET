@model ADO.NET.Domain.Entities.User

@using (Html.BeginForm("Edit", "Home", FormMethod.Post, new { enctype = "multipart/form-data", @class = "container mt-5" }))
{
    @Html.AntiForgeryToken()

<div class="row justify-content-center">
    <h4 class="text-center mb-4">Edit User Details</h4>
    <hr />
    <div class="col-md-6">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group row">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Gender,
                                      new List<SelectListItem>
                                      {
                                          new SelectListItem { Text = "Male", Value = "Male" },
                                          new SelectListItem { Text = "Female", Value = "Female" },
                                          new SelectListItem { Text = "Prefer not to say", Value = "NotSpecified" }
                                      },
                                      "-- Select Gender --",
                                      new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row" style="display:none;">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.ImageFile, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                <input type="file" name="ImageFile" id="ImageFile" class="form-control" accept=".jpg, .jpeg, .png" />
                @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row" style="display:none;">
            @Html.LabelFor(model => model.ResumeUrl, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResumeUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResumeUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.ResumeFile, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                <input type="file" name="ResumeFile" id="ResumeFile" class="form-control" accept=".pdf, .docx" />
                @Html.ValidationMessageFor(model => model.ResumeFile, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />   |
                <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Back</a>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="row">
            <div class="col-4">
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <p><strong>Profile Picture:</strong></p>
                    <img src="@Model.ImageUrl" class="img-fluid" alt="No Image Available" style="border-radius: 5px; border: 1px solid #bbb9b9; height: 200px; width: 300px;" />
                }
            </div>

        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                @if (!string.IsNullOrEmpty(Model.ResumeUrl))
                {
                    <p><strong>Resume:</strong></p>
                    <a href="@Model.ResumeUrl" target="_blank" class="btn btn-info">View Resume</a>
                }
                
            </div>
        </div>
    </div>
</div>

   
}
